{"version":3,"file":"static/js/720.30b48e9c.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/API.js","components/FilmCard/FilmCard.styled.jsx","components/FilmCard/FilmCard.jsx","components/Gallery/Gallery.styled.jsx","components/Gallery/Gallery.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","export const URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '86ff1474d02492b68b238125fe79bb52';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport async function getTrends() {\n  const res = await fetch(`${URL}/trending/movie/day?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nexport async function getFilmByQuery(page, query) {\n  const res = await fetch(`${URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`);\n  return await res.json();\n}\n\nexport async function getFilmById(id) {\n  const res = await fetch(`${URL}/movie/${id}?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nexport async function getCastById(id) {\n  const res = await fetch(`${URL}/movie/${id}/credits?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nexport async function getReviewsById(id) {\n  const res = await fetch(`${URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n  return await res.json();\n}","import styled from \"@emotion/styled\";\n\nexport const Item = styled.li`\nposition: relative;\ntransform: scale(1);\ntransition: all 0.2s ease;\nbox-shadow: 0px 5px 4px rgba(0, 0, 0, 0.25);\n\n\n:hover {\n  transform: scale(1.05)\n}\n`;\n\nexport const Image = styled.img`\nborder-radius: 10px 10px 0px 0px;\nwidth: 302px\ndisplay: block;\nmargin: 0\n`;\n\n\nexport const Title = styled.p`\ndisplay: block;\nposition: absolute;\nwidth: 100%;\nbackground: rgba(251, 119, 86, 0.95);\nfont-weight: 500;\nfont-size: 20px;\ncolor: #000;\npadding: 10px 0;\ntext-align: center;\nmargin: 0;\nbottom: 0;\nleft:0;\n`;","import { IMAGE_URL } from \"components/API\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Item, Image, Title } from \"./FilmCard.styled\";\n\nexport const FilmCard = ({ name, title, poster, id }) => {\n  \n  const location = useLocation();\n  return <Item>\n    <Link to={`/movies/${id}`} state={{from: location}}>\n      <Title>{name}{title}</Title>\n      <Image src={`${IMAGE_URL}${poster}`} width='302px' alt={title} />\n    </Link>\n      </Item>}","import styled from \"@emotion/styled\";\n\nexport const GalleryList = styled.ul`\nlist-style: none;\ndisplay: grid;\ngap: 24px;\ngrid-template-columns: 302px 302px 302px 302px;\njustify-content: center;\n`;","import { GalleryList } from \"./Gallery.styled\"\n\nexport const Gallery = ({ children }) => {\n  return <GalleryList>\n    {children}\n  </GalleryList>\n}","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\ndisplay: flex;\njustify-content: center;\nmargin-top: 20px;`;\n\nexport const Input = styled.input`\nfont-family: 'Montserrat', sans-serif;\nborder: 2px solid #000000; \n  border-radius: 3px; \n  background: #FB7756;\n  outline: none; \n  height: 46px; \n  width: 600px;\n  padding: 0 10px; \n  color: #000;\n  font-size: 16px; `;\n\nexport const Button = styled.button`\nfont-family: 'Montserrat', sans-serif;\nmargin-left: 24px;\nbackground-color: #FB7756;\n    border: none;\n    border-radius: 3px;\n    color: white;\n    padding: 15px 32px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 16px;\n    cursor: pointer;\n    height: 50px;\n    \n    :hover, :focus {\n      background-color: #000;\n      color: #fff;\n\n    }`;","import { useState } from \"react\";\nimport { Input, Button, Form } from \"./SearchForm.styled\";\n\n\nexport const SearchForm = ({onSubmit, }) => {\n  const [inputQuery, setInputQuery] = useState('');\n\n    const handleChange = (e) => {\n    setInputQuery(e.target.value)\n  }\n\n  const formSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(inputQuery);\n  }\n  return <Form onSubmit={formSubmit}>\n      <label>\n        <Input\n          name=\"query\"\n          placeholder=\"write the name of the movie here\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          onChange={handleChange}\n          value={inputQuery}></Input>\n      </label>\n      <Button type=\"submit\">Search</Button>\n    </Form>\n}","import styled from \"@emotion/styled\";\n\nexport const Pagination = styled.div`\ndisplay: flex;\njustify-content: center;\nwidth: 100%;`;\n\nexport const Button = styled.button`\nfont-family: 'Montserrat', sans-serif;\nbackground-color: #FB7756;\n    border: none;\n    border-radius: 3px;\n    color: white;\n    padding: 15px 32px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 16px;\n    height: 50px;\n    margin: 10px;\n    cursor: pointer;\n    \n    :hover {\n      background-color: #000;\n      color: #fff;\n\n    }`;\n\nexport const Page = styled.p`\nfont-family: 'Montserrat', sans-serif;\nbackground-color: #fff;\n    border: 2px solid #000;\n    color: #000;\n    border-radius: 3px;\n    padding: 5px;\n    align-items: center;\n    text-align: center;\n    text-decoration: none;\n    display: flex;\n    font-size: 16px;\n    width: 100px;\n    justify-content: center;\n\n  `;","import { useState, useEffect } from \"react\";\nimport { getFilmByQuery } from \"components/API\";\nimport { FilmCard } from \"components/FilmCard/FilmCard\";\nimport { Gallery } from \"components/Gallery/Gallery\";\nimport { SearchForm } from \"components/SearchForm/SearchForm\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { Pagination, Page, Button } from \"./Movies.styled\";\n\n\nexport default function Movies() {\n  const [page, setPage] = useState(1);\n  const [films, setFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [totalPages, setTotalPages] = useState(1);\n\n  useEffect(() => {\n    if (query) {\n      getFilmByQuery(page, query).then((films) => {\n        setFilms(films.results);\n        setTotalPages(films.total_pages);})\n    }\n  }, [page, query])\n\n  \n  const changeUrl = params => {\n    setSearchParams(params !== '' ? { query: params } : {})\n    setPage(1);\n  }\n\n  \n\n  return <div>\n    <SearchForm onSubmit={changeUrl} />\n    <Gallery>\n      {films && films.map(({ title, poster_path, id, name }) => {\n        window.scrollBy(0,-200);\n      return <FilmCard key={id}\n        name={name}\n        title={title}\n        id={id}\n        poster={poster_path}\n        />})}\n    </Gallery>\n    <Pagination>\n      {page === 1 && totalPages > 1 && <Button type=\"button\" onClick={() => { setPage(prev => prev - 1) }} disabled>Previous Page</Button>}\n      {totalPages > 1 && page > 1 && <Button type=\"button\" onClick={() => { setPage(prev => prev - 1) }}>Previous Page</Button>}\n      {films.length > 1 && <Page>Page: {page}</Page>}\n      {totalPages > 1 && page < totalPages &&  <Button type=\"button\" onClick={() => { setPage(prev => prev + 1) }}>Next Page</Button>}\n      {totalPages > 1 && page === totalPages && <Button type=\"button\" onClick={() => { setPage(prev => prev + 1)}} disabled>Next Page</Button>}\n    </Pagination>\n    \n    \n  </div>\n}"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","URL","API_KEY","IMAGE_URL","getTrends","fetch","res","json","getFilmByQuery","page","query","getFilmById","id","getCastById","getReviewsById","Item","styled","Image","Title","FilmCard","name","title","poster","location","useLocation","to","state","from","src","width","alt","GalleryList","Gallery","children","Form","Input","Button","SearchForm","onSubmit","useState","inputQuery","setInputQuery","e","preventDefault","placeholder","type","autoComplete","autoFocus","onChange","target","Pagination","Page","Movies","setPage","films","setFilms","useSearchParams","searchParams","setSearchParams","get","totalPages","setTotalPages","useEffect","results","total_pages","params","map","poster_path","window","scrollBy","onClick","prev","disabled","length"],"sourceRoot":""}