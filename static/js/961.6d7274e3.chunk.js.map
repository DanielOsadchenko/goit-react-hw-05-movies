{"version":3,"file":"static/js/961.6d7274e3.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/API.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export const URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '86ff1474d02492b68b238125fe79bb52';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport async function getTrends() {\n  const res = await fetch(`${URL}/trending/all/day?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nexport async function getFilmByQuery(page, query) {\n  const res = await fetch(`${URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`);\n  return await res.json();\n}\n\nexport async function getFilmById(id) {\n  const res = await fetch(`${URL}/movie/${id}?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nexport async function getCastById(id) {\n  const res = await fetch(`${URL}/movie/${id}/credits?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nexport async function getReviewsById(id) {\n  const res = await fetch(`${URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n  return await res.json();\n}","import { useParams, Link, Outlet, useLocation } from \"react-router-dom\";\nimport { Suspense, useEffect, useState } from \"react\";\nimport { getFilmById } from \"components/API\";\nimport { IMAGE_URL } from \"components/API\";\nimport image from 'images/placeholder.jpg'\n\n\n\nexport default function MovieDetails() {\n  const [film, setFilm] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation()\n\n  useEffect(() => {\n    if (movieId) {\n      getFilmById(movieId).then(setFilm);\n    }\n  }, [movieId]);\n\n  const date = () => {\n    if (film.first_air_date) {\n      return film.first_air_date.slice(0, 4)\n    }\n    if (film.release_date) {\n      return film.release_date.slice(0, 4)\n    }\n    if (film.first_air_date === '' || film.release_date === '') {\n      return film.status\n    }\n  };\n\n  const poster = () => {\n    if (film.poster_path) {\n      return `${IMAGE_URL}${film.poster_path}`\n    }\n    return image\n  };\n\n  return <div>\n    <Link to={location.state?.from ?? '/movies'}>Back</Link>\n    <div>\n      <img src={poster()} alt={film.title} />\n      <div>\n        <p><span>{film.title}{film.name}</span><span>{date()}</span></p>\n\n        <p>{film.tagline}</p>\n\n        <p><span>User Score:</span><span>{Math.round((film.vote_average / 10) * 100)}%</span></p>\n\n        <p>Overview</p>\n        <p>{film.overview}</p>\n\n        <p>Genres</p>\n        {film.genres && film.genres.map(genre => {\n          return <p key={genre.id}>{genre.name}</p>\n        })}\n      </div>\n\n      <div>\n        <p>Additional information</p>\n        <Link to={`/movies/${movieId}/Cast`}>Cast</Link>\n        <Link to={`/movies/${movieId}/Reviews`}>Reviews</Link>\n      </div>\n      <Suspense fallback={null}>\n        <Outlet/>\n      </Suspense>\n    </div>\n  </div>;\n};"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","URL","API_KEY","IMAGE_URL","getTrends","fetch","res","json","getFilmByQuery","page","query","getFilmById","id","getCastById","getReviewsById","MovieDetails","useState","film","setFilm","movieId","useParams","location","useLocation","useEffect","to","state","from","src","poster_path","image","alt","title","name","first_air_date","slice","release_date","status","tagline","Math","round","vote_average","overview","genres","map","genre","Suspense","fallback"],"sourceRoot":""}