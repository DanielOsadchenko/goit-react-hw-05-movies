{"version":3,"file":"static/js/145.b7024bad.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/API.js","components/FilmCard/FilmCard.jsx","components/Gallery/Gallery.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export const URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '86ff1474d02492b68b238125fe79bb52';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport async function getTrends() {\n  const res = await fetch(`${URL}/trending/all/day?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nexport async function getFilmByQuery(page, query) {\n  const res = await fetch(`${URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`);\n  return await res.json();\n}\n\nexport async function getFilmById(id) {\n  const res = await fetch(`${URL}/movie/${id}?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nexport async function getCastById(id) {\n  const res = await fetch(`${URL}/movie/${id}/credits?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nexport async function getReviewsById(id) {\n  const res = await fetch(`${URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n  return await res.json();\n}","import { IMAGE_URL } from \"components/API\";\nimport { Link, useLocation } from \"react-router-dom\";\n\n\nexport const FilmCard = ({ name, title, poster, id }) => {\n  \n  const location = useLocation();\n  return <li>\n    <Link to={`/movies/${id}`} state={{from: location}}>\n      <p>{name}{title}</p>\n      <img src={`${IMAGE_URL}${poster}`} alt={title} />\n    </Link>\n      </li>}","export const Gallery = ({children}) => {\n  return <ul>\n    {children}\n  </ul>\n}","import { useState } from \"react\"\n\n\nexport const SearchForm = ({onSubmit}) => {\n  const [inputQuery, setInputQuery] = useState('');\n\n    const handleChange = (e) => {\n    setInputQuery(e.target.value)\n  }\n\n  const formSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(inputQuery)\n    setInputQuery('')\n  }\n  return <form onSubmit={formSubmit}>\n      <label>\n        <input\n          name=\"query\"\n          placeholder=\"write the name of the movie here\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          onChange={handleChange}\n          value={inputQuery}></input>\n      </label>\n      <button type=\"submit\">Search</button>\n    </form>\n}","import { useState, useEffect } from \"react\";\nimport { getFilmByQuery } from \"components/API\";\nimport { FilmCard } from \"components/FilmCard/FilmCard\";\nimport { Gallery } from \"components/Gallery/Gallery\";\nimport { SearchForm } from \"components/SearchForm/SearchForm\";\nimport { useSearchParams } from \"react-router-dom\";\n\n\nexport default function Movies() {\n  const [page, setPage] = useState(1);\n  const [films, setFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [totalPages, setTotalPages] = useState(1);\n\n  useEffect(() => {\n    if (query) {\n      getFilmByQuery(page, query).then((films) => {\n        setFilms(films.results);\n        setTotalPages(films.total_pages);})\n    }\n  }, [page, query])\n  \n  const changeUrl = params => {\n    setSearchParams(params !== '' ? { query: params } : {})\n\n  }\n\n  return <div>\n    <SearchForm onSubmit={changeUrl}/>\n    <Gallery>\n      {films && films.map(({ title, poster_path, id, name }) => {\n        window.scrollBy(0,-200);\n      return <FilmCard key={id}\n        name={name}\n        title={title}\n        id={id}\n        poster={poster_path}\n        />})}\n    </Gallery>\n    <div>\n      {page > 1 && <button type=\"button\" onClick={() => { setPage(prev => prev - 1) }}>Previous Page</button>}\n    <p>Page: {page}</p>\n      {totalPages > 1 && <button type=\"button\" onClick={() => { setPage(prev => prev + 1)}}>Next Page</button>}\n    </div>\n    \n    \n  </div>\n}"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","URL","API_KEY","IMAGE_URL","getTrends","fetch","res","json","getFilmByQuery","page","query","getFilmById","id","getCastById","getReviewsById","FilmCard","name","title","poster","location","useLocation","to","state","from","src","alt","Gallery","children","SearchForm","onSubmit","useState","inputQuery","setInputQuery","e","preventDefault","placeholder","type","autoComplete","autoFocus","onChange","target","Movies","setPage","films","setFilms","useSearchParams","searchParams","setSearchParams","get","totalPages","setTotalPages","useEffect","results","total_pages","params","map","poster_path","window","scrollBy","onClick","prev"],"sourceRoot":""}